x-base-service: &base-service
    env_file: ./.env
    environment:
        - DOCKER_BUILDKIT=1
        - ENVIRONMENT=production
        - ALLOWED_HOSTS=adminpanel
        - ADMINPANEL_HOST=adminpanel
        - ADMINPANEL_PORT=8000
        - ADMINPANEL_WEB_PROTOCOL=http
        - ADMINPANEL_LISTEN_PORT=80
        - ADMIN=ADMIN
        - ROOT=ROOT
        - USER=USER
        - REDIS_HOST=redis
        - REDIS_PORT=6379
        - CELERY_BEAT_SCHEDULER=django_celery_beat.schedulers:DatabaseScheduler
        - CELERY_BROKER_URL=redis://redis:6379
        - CELERY_RESULT_BACKEND=redis://redis:6379

#    restart: on-failure

services:
    postgres:
        <<: *base-service
        image: postgres:14.3-alpine
        ports:
            - 6100:6100
        command: -p 6100
        volumes:
            - pgdata:/var/lib/postgresql/data

    redis:
        <<: *base-service
        image: redis:7-alpine
        ports:
            - 6379:6379
        volumes:
            - redis_data:/data

    bot:
        <<: *base-service
        image: ghcr.io/studio-yandex-practicum/bmc_companion_bot:latest
        container_name: bmc_bot
        depends_on:
            - adminpanel

    adminpanel:
        <<: *base-service
        image: ghcr.io/studio-yandex-practicum/bmc_companion_adminpanel:latest
        container_name: bmc_adminpanel
        depends_on:
            - postgres
            - redis
        volumes:
            - ./adminpanel/src:/src
        ports:
            - 8000:8000
        command:
            - /scripts/entrypoint_adminpanel.sh
#            - /scripts/wait-dependencies.sh
#            - /scripts/start.sh

    celery:
        <<: *base-service
        image: ghcr.io/studio-yandex-practicum/bmc_companion_adminpanel:latest
        container_name: bmc_celery
#        build:
#            context: .
#            dockerfile: ./docker/celery/Dockerfile
        depends_on:
            - postgres
            - redis
        volumes:
            - ./adminpanel/src:/src
        command:
            - /scripts/entrypoint_celery.sh

    celery_beat:
        <<: *base-service
        image: ghcr.io/studio-yandex-practicum/bmc_companion_adminpanel:latest
        container_name: bmc_celery_beat
#        build:
#            context: .
#            dockerfile: ./docker/celery_beat/Dockerfile
        depends_on:
            - postgres
            - redis
            - celery
        volumes:
            - ./adminpanel/src:/src
        command:
            - /scripts/entrypoint_celery_beat.sh

    nginx:
        <<: *base-service
        image: nginx:1.21.6-alpine
        volumes:
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./docker/nginx/templates:/etc/nginx/templates
#            - static_value:/var/html/static/
        ports:
            - 80:80
        depends_on:
            - adminpanel


volumes:
    pgdata:
    redis_data:
    static_value:
